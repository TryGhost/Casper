<!-- 
USING THIS TEMPLATE:

Apply it to a post in Ghost via Templates
Go to Code Injection, and inject the URL of the Google Sheet:

<meta name="custom:sheet_url" content="https://docs.google.com/spreadsheets/d/e/XXXXX/pubhtml">

In order for this to work, the Sheet must be "Published" not just "Shared"
-->
{{!< default}}

<!-- TimelineJS style Overrides -->
<link rel="stylesheet" href="{{asset 'timeline.css'}}">

<style>
  .site-footer,
  .content-title,
  .post-full-footer,
  .post-content {
    display: none !important;
  }

  .timeline-container {
    flex: 1;
    height: calc(100vh - 88px); /* Adjust header height if needed */
    width: 100%;
    background: var(--color-darkmode) !important;
  }

  /* Styling for access message */
  .timeline-access-message {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    height: 100%;
    text-align: center;
    padding: 2rem;
    background: linear-gradient(to bottom right, #3f3f3f, var(--color-darkmode));
    color: #fff;
  }

  .timeline-access-message h1 {
    margin-bottom: 1rem;
    color: #fff;
  }

  .timeline-access-message p {
    font-size: 2rem;
    margin-bottom: 2rem;
    max-width: 600px;
  }

  .timeline-access-cta {
    display: flex;
    gap: 1rem;
    margin-top: 1rem;
  }

  .timeline-signup-button,
  .timeline-signin-button,
  .timeline-upgrade-button {
    display: inline-block;
    padding: 0.8rem 1.5rem;
    border-radius: 4px;
    font-weight: 600;
    text-decoration: none;
    transition: all 0.2s ease;
  }

  .timeline-signup-button,
  .timeline-upgrade-button {
    background-color: var(--ghost-accent-color);
    color: #fff;
  }

  .timeline-signin-button {
    background-color: transparent;
    border: 1px solid #fff;
    color: #fff;
  }

  .timeline-signup-button:hover,
  .timeline-upgrade-button:hover {
    opacity: 0.9;
    transform: translateY(-2px);
  }

  .timeline-signin-button:hover {
    background-color: rgba(255, 255, 255, 0.1);
    transform: translateY(-2px);
  }

  @media only screen and (max-width: 768px) {
    /* Adjust access message for mobile */
    .timeline-access-message h2 {
      font-size: 1.8rem;
    }

    .timeline-access-message p {
      font-size: 1rem;
    }

    .timeline-access-cta {
      flex-direction: column;
    }
  }

</style>

<article class="timeline-container">
  {{!-- Debug information to check post data structure --}}
  <div class="debug-info" style="display: none;">
    Post exists: {{#if post}}Yes{{else}}No{{/if}}<br>
    Visibility: {{post.visibility}}<br>
    Member exists: {{#if member}}Yes{{else}}No{{/if}}<br>
    Member paid: {{#if member.paid}}Yes{{else}}No{{/if}}
  </div>

  {{!-- Check post visibility and render accordingly --}}
  {{#post}}
    {{!-- For public posts, render the timeline for everyone --}}
    {{#has visibility="public"}}
      <div id="timeline-embed"></div>
    {{else}}
      {{!-- For members-only posts, check if user is a member --}}
      {{#has visibility="members"}}
        {{#if @member}}
          <div id="timeline-embed"></div>
        {{else}}
          <div class="timeline-access-message">
            <h1>This timeline is available to members</h1>
            <p>Sign up or log in to view this timeline.</p>
            <div class="timeline-access-cta">
              <a href="#/portal/signup" class="timeline-signup-button">Sign up now</a>
              <a href="#/portal/signin" class="timeline-signin-button">Log in</a>
            </div>
          </div>
        {{/if}}
      {{else}}
        {{!-- For paid-members-only posts, check if user is a paid member --}}
        {{#has visibility="paid"}}
          {{#if @member.paid}}
            <div id="timeline-embed"></div>
          {{else}}
            <div class="timeline-access-message">
              <h1>This timeline is available to paid members</h1>
              <p>Upgrade your membership to view this timeline.</p>
              <div class="timeline-access-cta">
                {{#if @member}}
                  <a href="#/portal/account/plans" class="timeline-upgrade-button">Upgrade now</a>
                {{else}}
                  <a href="#/portal/signup" class="timeline-signup-button">Sign up now</a>
                  <a href="#/portal/signin" class="timeline-signin-button">Log in</a>
                {{/if}}
              </div>
            </div>
          {{/if}}
        {{else}}
          {{!-- Default case, just show the timeline --}}
          <div id="timeline-embed"></div>
        {{/has}}
      {{/has}}
    {{/has}}
  {{else}}
    {{!-- If no post context, show the timeline --}}
    <div id="timeline-embed"></div>
  {{/post}}
</article>

<link rel="stylesheet" href="/assets/timelinejs/css/timeline.css">
<script src="/assets/timelinejs/js/timeline.js"></script>


<script>
  document.addEventListener("DOMContentLoaded", function () {
    // Only initialize the timeline if the timeline-embed element exists
    // (it won't exist for members/paid content if the user doesn't have access)
    const timelineEmbed = document.getElementById('timeline-embed');
    if (!timelineEmbed) return;

    const metaTag = document.querySelector('meta[name="custom:sheet_url"]');
    const sheetUrl = metaTag ? metaTag.content : null;

    if (sheetUrl) {
      window.timeline = new TL.Timeline('timeline-embed', sheetUrl, {
        timenav_position: "bottom",
        initial_zoom: 4,
        scale_factor: 2,
        zoom_sequence: [1,2,3],
        start_at_slide: 0,
        use_bc: false,
        hash_bookmark: false,
        lang: "/assets/timelinejs/timeline-locale.json",
      });
    } else {
      timelineEmbed.innerHTML = "Missing timeline URL.";
    }
  });


/* NUKE ALL NEGATIVE "BCE" DATES AND TICKS */
  function removeBCETicks() {
    document.querySelectorAll('.tl-timeaxis-tick').forEach(tick => {
      const left = parseFloat(tick.style.left);
      if (left < 0) {
        tick.remove();
      }
    });
  }

  const waitForTimeline = setInterval(() => {
    // Only run if timeline-embed exists
    const timelineEmbed = document.getElementById('timeline-embed');
    if (!timelineEmbed) {
      clearInterval(waitForTimeline);
      return;
    }

    const ticksReady = document.querySelectorAll('.tl-timeaxis-tick');
    if (ticksReady.length > 0) {
      clearInterval(waitForTimeline);
      removeBCETicks();

      const axis = document.querySelector('.tl-timeaxis-content-container');
      if (axis) {
        const observer = new MutationObserver(removeBCETicks);
        observer.observe(axis, { childList: true, subtree: true });
      }
    }
  }, 200);

  // Enable debug info with a query parameter
  if (window.location.search.includes('debug=true')) {
    document.querySelector('.debug-info').style.display = 'block';
  }
</script>

